"""–ü–æ–¥–¥–µ—Ä–∂–∫–∞ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å): —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∏–∫–µ—Ç–∞, –¥–∏–∞–ª–æ–≥ –∏ –∑–∞–∫—Ä—ã—Ç–∏–µ."""

import logging
from typing import Optional

from aiogram import F, Router
from aiogram.fsm.context import FSMContext
from aiogram.types import CallbackQuery, Message, InlineKeyboardMarkup, InlineKeyboardButton

from config import SUPPORT_GROUP_ID
from db.base import get_session
from db.support import SupportTicket, close_ticket, create_ticket, get_open_ticket
from db.users import add_or_update_user
from sqlalchemy import select
from states.support import Support


logger = logging.getLogger(__name__)

router = Router()

cancel_kb = InlineKeyboardMarkup(
    inline_keyboard=[[InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_support")]]
)


@router.callback_query(F.data == "help")
@router.message(F.text.lower() == "/help")
async def start_support_handler(event, state: FSMContext) -> None:
    """–°—Ç–∞—Ä—Ç / –ø–æ–º–æ—â—å: —Å–æ–∑–¥–∞—ë—Ç –∏–ª–∏ –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ç–∏–∫–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    if isinstance(event, CallbackQuery):
        user = event.from_user
        answer_func = event.message.answer
        done_func = event.answer
    else:
        user = event.from_user
        answer_func = event.answer
        done_func = lambda *a, **kw: None
    user_id = user.id
    async with get_session() as session:
        # –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º –∑–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await add_or_update_user(session, user.id, user.first_name, user.username)
        # –Ω–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç–∏–∫–µ—Ç (–ª—é–±–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ)
        result = await session.execute(
            select(SupportTicket).where(SupportTicket.user_id == user_id).order_by(SupportTicket.created_at.desc())
        )
        ticket: Optional[SupportTicket] = result.scalars().first()

        if ticket and ticket.is_closed == 0:
            # –∞–∫—Ç–∏–≤–Ω—ã–π –µ—Å—Ç—å ‚Äî –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–≤–æ–¥–∏–º –≤ –¥–∏–∞–ª–æ–≥
            await state.set_state(Support.in_dialog)
            await answer_func(
                "–£ –≤–∞—Å —É–∂–µ –æ—Ç–∫—Ä—ã—Ç –¥–∏–∞–ª–æ–≥ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π. –ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."
            )
            await done_func()
            return
        elif ticket and ticket.is_closed == 1:
            # –ø–µ—Ä–µ–æ—Ç–∫—Ä—ã–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π
            ticket.is_closed = 0
            renamed = False
            # –µ—Å–ª–∏ username –∏–∑–º–µ–Ω–∏–ª—Å—è ‚Äî –æ–±–Ω–æ–≤–∏–º stored –∏ –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å —Ç–µ–º—É
            if ticket.username != user.username:
                ticket.username = user.username
                try:
                    # –ø–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å —Ç–µ–º—É (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ)
                    new_name = f"–¢–∏–∫–µ—Ç @{user.username}" if user.username else f"–¢–∏–∫–µ—Ç {user.id}"
                    await event.bot.edit_forum_topic(
                        chat_id=SUPPORT_GROUP_ID,
                        message_thread_id=ticket.topic_id,
                        name=new_name[:128],  # –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ TG
                    )
                    renamed = True
                except Exception:  # noqa: BLE001
                    pass
            await session.commit()
            await state.set_state(Support.waiting_for_question)
            text = "–î–∏–∞–ª–æ–≥ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –ø–µ—Ä–µ–æ—Ç–∫—Ä—ã—Ç. –û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º." + (" (–ù–∞–∑–≤–∞–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–æ)" if renamed else "")
            await answer_func(text, reply_markup=cancel_kb)
            await done_func()
            return

    # –ù–µ—Ç —Ç–∏–∫–µ—Ç–∞ ‚Äî –ø–æ–ø—Ä–æ—Å–∏–º –ø–µ—Ä–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await state.set_state(Support.waiting_for_question)
    await answer_func(
        "–û–ø–∏—à–∏—Ç–µ –≤–∞—à—É –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –≤–æ–ø—Ä–æ—Å –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º. "
        "–Ø –ø–µ—Ä–µ–¥–∞–º –µ–≥–æ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É. –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç, —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ –∏–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç.",
        reply_markup=cancel_kb
    )
    await done_func()


@router.message(Support.waiting_for_question)
async def create_ticket_handler(message: Message, state: FSMContext) -> None:
    """
    –°–æ–∑–¥–∞–µ—Ç —Ç–∏–∫–µ—Ç –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    –ü–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –≤–æ–ø—Ä–æ—Å –≤ –≥—Ä—É–ø–ø—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ —É–≤–µ–¥–æ–º–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    await state.clear()
    user = message.from_user
    user_info = (
        f"üë§ <b>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</b> {user.full_name}\n"
        f"<b>ID:</b> <code>{user.id}</code>\n"
        f"<b>Username:</b> {f'@{user.username}' if user.username else '–Ω–µ —É–∫–∞–∑–∞–Ω'}"
    )

    try:
        async with get_session() as session:
            # –ï—â—ë —Ä–∞–∑ –≤–æ–∑—å–º—ë–º (–Ω–∞ —Å–ª—É—á–∞–π –≥–æ–Ω–∫–∏) –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç–∏–∫–µ—Ç
            result = await session.execute(
                select(SupportTicket).where(SupportTicket.user_id == user.id).order_by(SupportTicket.created_at.desc())
            )
            ticket: Optional[SupportTicket] = result.scalars().first()

            if ticket and ticket.is_closed == 0:
                topic_id = ticket.topic_id
            elif ticket and ticket.is_closed == 1:
                ticket.is_closed = 0
                topic_id = ticket.topic_id
                # –ø–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ username
                if ticket.username != user.username:
                    ticket.username = user.username
                    try:
                        new_name = f"–¢–∏–∫–µ—Ç @{user.username}" if user.username else f"–¢–∏–∫–µ—Ç {user.id}"
                        await message.bot.edit_forum_topic(
                            chat_id=SUPPORT_GROUP_ID,
                            message_thread_id=topic_id,
                            name=new_name[:128],
                        )
                    except Exception:  # noqa: BLE001
                        pass
                await session.commit()
            else:
                # —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é —Ç–µ–º—É –∏ —Ç–∏–∫–µ—Ç
                topic = await message.bot.create_forum_topic(
                    chat_id=SUPPORT_GROUP_ID,
                    name=(f"–¢–∏–∫–µ—Ç @{user.username}" if user.username else f"–¢–∏–∫–µ—Ç {user.id}")[:128],
                )
                topic_id = topic.message_thread_id
                await add_or_update_user(session, user.id, user.first_name, user.username)
                await create_ticket(
                    session,
                    user_id=user.id,
                    username=user.username,
                    topic_id=topic_id,
                )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–µ–º—É
        await message.bot.send_message(
            SUPPORT_GROUP_ID, user_info, message_thread_id=topic_id
        )
        await message.copy_to(chat_id=SUPPORT_GROUP_ID, message_thread_id=topic_id)

        await message.answer(
            "‚úÖ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞–Ω–æ –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.\n\n"
            "–ß—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /stop."
        )
        await state.set_state(Support.in_dialog)
        logger.info("üì© [SUPPORT] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %d —Å–æ–∑–¥–∞–ª —Ç–∏–∫–µ—Ç –≤ —Ç–µ–º–µ %d (reuse/create)", user.id, topic_id)
    except Exception as e:
        logger.error("‚ùå [SUPPORT] –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Ç–∏–∫–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %d: %s", user.id, e)
        await message.answer("‚ùóÔ∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±—Ä–∞—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


@router.message(Support.in_dialog, F.text.lower().in_(["/stop", "—Å—Ç–æ–ø", "–∑–∞–∫—Ä—ã—Ç—å"]))
@router.callback_query(Support.in_dialog, F.data == "cancel_support")
async def close_ticket_by_user_handler(event, state: FSMContext) -> None:
    """
    –ó–∞–∫—Ä—ã–≤–∞–µ—Ç —Ç–∏–∫–µ—Ç –ø–æ –∫–æ–º–∞–Ω–¥–µ –∏–ª–∏ –∫–Ω–æ–ø–∫–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    if isinstance(event, Message):
        user_id = event.from_user.id
    else:
        user_id = event.from_user.id
    """
    –ó–∞–∫—Ä—ã–≤–∞–µ—Ç —Ç–∏–∫–µ—Ç –ø–æ –∫–æ–º–∞–Ω–¥–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    async with get_session() as session:
        ticket: Optional[SupportTicket] = await get_open_ticket(session, user_id)
        if not ticket:
            if isinstance(event, Message):
                await event.answer("–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.")
            else:
                await event.message.answer("–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.")
            await state.clear()
            return

        await close_ticket(session, user_id)
        await state.clear()

        if isinstance(event, Message):
            await event.answer("–î–∏–∞–ª–æ–≥ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∑–∞–≤–µ—Ä—à—ë–Ω. –í—ã —Å–Ω–æ–≤–∞ –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º.")
        else:
            await event.message.edit_text("–î–∏–∞–ª–æ–≥ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∑–∞–≤–µ—Ä—à—ë–Ω. –í—ã —Å–Ω–æ–≤–∞ –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º.")
            await event.answer()
        try:
            await event.bot.send_message(
                SUPPORT_GROUP_ID,
                "‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≤–µ—Ä—à–∏–ª –¥–∏–∞–ª–æ–≥.",
                message_thread_id=ticket.topic_id,
            )
        except Exception as e:
            logger.error(
                "‚ùå [SUPPORT] –ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –≥—Ä—É–ø–ø—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –æ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Ç–∏–∫–µ—Ç–∞ %d: %s",
                ticket.topic_id,
                e,
            )
        logger.info("‚úÖ [SUPPORT] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %d –∑–∞–∫—Ä—ã–ª —Å–≤–æ–π —Ç–∏–∫–µ—Ç (—Ç–µ–º–∞ %d)", user_id, ticket.topic_id)


@router.message(Support.in_dialog)
async def forward_to_support_handler(message: Message) -> None:
    """
    –ü–µ—Ä–µ—Å—ã–ª–∞–µ—Ç –ø–æ—Å–ª–µ–¥—É—é—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Ç–µ–º—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏.
    """
    user_id = message.from_user.id
    async with get_session() as session:
        ticket: Optional[SupportTicket] = await get_open_ticket(session, user_id)
        if not ticket:
            await message.answer("–í–∞—à –¥–∏–∞–ª–æ–≥ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —É–∂–µ –∑–∞–∫—Ä—ã—Ç. –ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –Ω–æ–≤—ã–π, –Ω–∞–∂–º–∏—Ç–µ /help.")
            return

        try:
            await message.copy_to(
                chat_id=SUPPORT_GROUP_ID, message_thread_id=ticket.topic_id
            )
        except Exception as e:
            logger.error(
                "‚ùå [SUPPORT] –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ—Å–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %d –≤ —Ç–∏–∫–µ—Ç %d: %s",
                user_id,
                ticket.topic_id,
                e,
            )
            await message.answer("‚ùóÔ∏è –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

@router.callback_query(Support.waiting_for_question, F.data == "cancel_support")
async def cancel_support_before_ticket_handler(callback: CallbackQuery, state: FSMContext) -> None:
    """
    –ü–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ç–º–µ–Ω–∏—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ –¥–æ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–∞ (–Ω–∞ —ç—Ç–∞–ø–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞).
    """
    await state.clear()
    await callback.message.edit_text("–û–±—Ä–∞—â–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ. –ï—Å–ª–∏ –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–º–æ—â—å ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ '–ü–æ–º–æ—â—å' —Å–Ω–æ–≤–∞.")
    await callback.answer()