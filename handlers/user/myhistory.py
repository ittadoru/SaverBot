from aiogram import Router
from aiogram.types import CallbackQuery
from db.base import get_session
from db.downloads import get_last_links
from utils.keyboards import back_button
from datetime import timezone, timedelta


router = Router()


@router.callback_query(lambda c: c.data == "download_history")
async def show_download_history(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å–∫–∞—á–∏–≤–∞–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã–µ —Å—Å—ã–ª–∫–∏).

    –í—Ä–µ–º—è –ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–æ –≤ –º–æ—Å–∫–æ–≤—Å–∫–∏–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å (MSK, UTC+3).
    –ë–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫ ‚Äî –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∫–ª–∏–∫–∞—é—Ç –ø–æ —Å—Å—ã–ª–∫–µ –≤ —Ç–µ–∫—Å—Ç–µ.
    """
    user_id = callback.from_user.id
    async with get_session() as session:
        links = await get_last_links(session, user_id, limit=10, include_time=True)

    if not links:
        text = "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–π."
        await callback.message.edit_text(text, reply_markup=back_button("start"))
        await callback.answer()
        return

    msk = timezone(timedelta(hours=3))
    lines = []
    for idx, (url, created_at) in enumerate(links, start=1):
        # Ensure created_at has tzinfo; DB stores UTC (naive datetime), treat as UTC
        if created_at.tzinfo is None:
            created_at = created_at.replace(tzinfo=timezone.utc)
        created_msk = created_at.astimezone(msk)
        time_str = created_msk.strftime('%d.%m.%Y %H:%M') + ' MSK'
        preview = url if len(url) <= 60 else url[:57] + '...'
        # Make clickable link using HTML
        lines.append(f"<b>{idx}.</b> <a href=\"{url}\">{preview}</a> ‚Äî <code>{time_str}</code>")

    text = "<b>üïì –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10):</b>\n\n" + "\n".join(lines)
    await callback.message.edit_text(text, parse_mode="HTML", reply_markup=back_button("start"))
    await callback.answer()
