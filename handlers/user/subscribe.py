from aiogram import Router, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from payment import create_payment
from utils.redis import get_all_tariffs, get_tariff_by_id


router = Router()

@router.message(Command("subscribe"))
async def subscribe_handler(message: types.Message):
    text = (
        "<b>üíé –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ø–æ–¥–ø–∏—Å–∫–∏:</b>\n"
        "‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ —Å YouTube –¥–æ 720p (–≤—ã–±–æ—Ä —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è)\n"
        "‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–∫–∞—á–∞—Ç—å –∞—É–¥–∏–æ –∏–∑ –≤–∏–¥–µ–æ –Ω–∞ Youtube\n"
        "‚Ä¢ –ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è\n"
        "‚Ä¢ –ë–æ–ª–µ–µ –±—ã—Å—Ç—Ä—ã–µ –∑–∞–≥—Ä—É–∑–∫–∏\n"
        "‚Ä¢ –î–æ–ª–≥–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (1 —á–∞—Å)\n"
        "‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ–¥–ø–∏—Å–∫–∏:"
    )

    
    tariffs = await get_all_tariffs()
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text=f"{tariff.name} ‚Äî {tariff.price} RUB",
            callback_data=f"buy_tariff:{tariff.id}"
        )] for tariff in tariffs
    ])

    await message.answer(text, reply_markup=keyboard, parse_mode="HTML")



@router.callback_query(lambda c: c.data and c.data.startswith("buy_tariff:"))
async def payment_callback_handler(callback: types.CallbackQuery):
    user_id = callback.from_user.id
    username = callback.from_user.username or ""
    
    try:
        tariff_id = int(callback.data.split(":")[1])
    except (IndexError, ValueError):
        await callback.answer("–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–∞—Ä–∏—Ñ.", show_alert=True)
        return

    # –ü–æ–ª—É—á–∞–µ–º —Ç–∞—Ä–∏—Ñ –∏–∑ Redis
    tariff = await get_tariff_by_id(tariff_id)
    if not tariff:
        await callback.answer("–¢–∞—Ä–∏—Ñ –Ω–µ –Ω–∞–π–¥–µ–Ω.", show_alert=True)
        return

    # –°–æ–∑–¥–∞—ë–º –ø–ª–∞—Ç—ë–∂
    payment_url, payment_id = create_payment(
        user_id=user_id,
        amount=tariff.price,
        description=f"–ü–æ–¥–ø–∏—Å–∫–∞: {tariff.name}",
        bot_username="savetokgrambot",
        metadata={
            "user_id": str(user_id),
            "tariff_id": str(tariff.id)
        }
    )

    await callback.message.edit_text(
        f"üí≥ –î–ª—è –æ–ø–ª–∞—Ç—ã —Ç–∞—Ä–∏—Ñ–∞ <b>{tariff.name}</b> –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:\n\n{payment_url}",
        parse_mode="HTML"
    )
    await callback.answer()



@router.callback_query(lambda c: c.data == "back_to_subscribe")
async def back_to_subscribe_handler(callback: types.CallbackQuery):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–Ω–æ–≤–æ –≤—ã–±–æ—Ä –ø–æ–¥–ø–∏—Å–∫–∏
    text = (
        "<b>üíé –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –ø–æ–¥–ø–∏—Å–∫–∏:</b>\n"
        "‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ —Å YouTube –¥–æ 720p (–≤—ã–±–æ—Ä —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è)\n"
        "‚Ä¢ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Å–∫–∞—á–∞—Ç—å –∞—É–¥–∏–æ –∏–∑ –≤–∏–¥–µ–æ –Ω–∞ Youtube\n"
        "‚Ä¢ –ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è\n"
        "‚Ä¢ –ë–æ–ª–µ–µ –±—ã—Å—Ç—Ä—ã–µ –∑–∞–≥—Ä—É–∑–∫–∏\n"
        "‚Ä¢ –î–æ–ª–≥–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (1 —á–∞—Å)\n"
        "‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ–¥–ø–∏—Å–∫–∏:"
    )
    tariffs = await get_all_tariffs()
    # –°–æ–∑–¥–∞—ë–º —Å–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫
    buttons = [
        [InlineKeyboardButton(text=f"{tariff.name} ‚Äì {tariff.price} RUB", callback_data=f"buy_tariff:{tariff.id}")]
        for tariff in tariffs
    ]
    buttons.append([InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_menu")])

    # –°–æ–∑–¥–∞—ë–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)

    await callback.message.edit_text(text, reply_markup=keyboard, parse_mode="HTML")
    await callback.answer()
