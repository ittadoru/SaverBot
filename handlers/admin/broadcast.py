"""–û–±—â–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞: –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –æ–±—â–µ–≥–æ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞."""

from aiogram import Router

from db.base import get_session
from db.users import get_all_user_ids
from utils.broadcast_base import register_broadcast_constructor

router = Router()


async def _audience_all() -> list[int]:
    async with get_session() as session:
        return await get_all_user_ids(session)


register_broadcast_constructor(
    router,
    start_trigger="broadcast_start",
    prefix="broadcast",
    title="üì¢ **–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –æ–±—â–µ–π —Ä–∞—Å—Å—ã–ª–∫–∏**\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏.",
    send_button_label="üöÄ –û—Ç–ø—Ä–∞–≤–∏—Ç—å",
    start_status_text="‚è≥ –†–∞—Å—Å—ã–ª–∫–∞ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è...",
    summary_title="‚úÖ **–û–±—â–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!**",
    total_label="–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏",
    audience_fetcher=_audience_all,
)
