"""–†–∞—Å—Å—ã–ª–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∏ —Ä–∞–∑—É –Ω–µ –ø–ª–∞—Ç–∏–ª–∏: –æ–±—â–∏–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä."""

from aiogram import Router

from db.base import get_session
from db.users import get_user_ids_never_paid
from utils.broadcast_base import register_broadcast_constructor

router = Router()


async def _audience_never_paid() -> list[int]:
    async with get_session() as session:
        return await get_user_ids_never_paid(session)


register_broadcast_constructor(
    router,
    start_trigger="trial_broadcast_start",
    prefix="trial_broadcast",
    title="üéØ **–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Ä–∞—Å—Å—ã–ª–∫–∏ –¥–ª—è –Ω–µ–ø–ª–∞—Ç–∏–≤—à–∏—Ö**\n\n–ù–∞—Å—Ç—Ä–æ–π—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, –∫–æ—Ç–æ—Ä—ã–µ –µ—â—ë –Ω–∏ —Ä–∞–∑—É –Ω–µ –ø–æ–∫—É–ø–∞–ª–∏.",
    send_button_label="üöÄ –û—Ç–ø—Ä–∞–≤–∏—Ç—å",
    start_status_text="‚è≥ –†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è...",
    summary_title="‚úÖ **Trial-—Ä–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!**",
    total_label="–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–ª–∞—Ç–∏–ª–∏)",
    audience_fetcher=_audience_never_paid,
)
