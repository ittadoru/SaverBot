import os
from aiogram import Router, F
from aiogram.types import CallbackQuery, Message, FSInputFile
from aiogram.fsm.context import FSMContext

from states.log_export import LogExport

router = Router()


@router.callback_query(F.data == "last_logs")
async def send_last_logs(callback: CallbackQuery):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞ –ª–æ–≥–æ–≤ (bot.log)."""
    log_path = "logs/bot.log"
    if os.path.exists(log_path):
        file = FSInputFile(log_path)
        await callback.message.answer_document(file, caption="üìÑ –õ–æ–≥–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è")
    else:
        await callback.message.answer("–§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    await callback.answer()


@router.callback_query(F.data == "custom_logs")
async def ask_date(callback: CallbackQuery, state: FSMContext):
    """–ó–∞–ø—Ä–æ—Å –¥–∞—Ç—ã –¥–ª—è –≤—ã–≥—Ä—É–∑–∫–∏ –ª–æ–≥–æ–≤ –ø–æ –¥–∞—Ç–µ."""
    await callback.message.answer(
        "–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –ª–æ–≥–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ `–ì–ì–ì–ì-–ú–ú-–î–î`, –Ω–∞–ø—Ä–∏–º–µ—Ä: `2025-08-01`"
    )
    await state.set_state(LogExport.waiting_for_date)
    await callback.answer()


@router.message(LogExport.waiting_for_date)
async def send_logs_by_date(message: Message, state: FSMContext):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –ª–æ–≥–æ–≤ –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –¥–∞—Ç—É."""
    user_date = message.text.strip()
    filename = f"logs/bot_{user_date}.log"

    if os.path.exists(filename):
        file = FSInputFile(filename)
        await message.answer_document(file, caption=f"üìÑ –õ–æ–≥–∏ –∑–∞ {user_date}")
    else:
        await message.answer("–§–∞–π–ª –∑–∞ —É–∫–∞–∑–∞–Ω–Ω—É—é –¥–∞—Ç—É –Ω–µ –Ω–∞–π–¥–µ–Ω.")

    await state.clear()
