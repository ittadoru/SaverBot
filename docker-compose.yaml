services:
  postgres:
    image: postgres:16
    container_name: saverbot_postgres
    restart: always
    env_file: [.env]
    environment:
      POSTGRES_USER: ${POSTGRES_USER:?must-set}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?must-set}
      POSTGRES_DB: ${POSTGRES_DB:?must-set}
    ports: ["5433:5432"]
    volumes:
      - saverbot_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} || exit 1"]
      interval: 5s
      timeout: 3s
      retries: 12

  app:
    build: .
    image: saver_bot:latest
    container_name: saverbot_app
    restart: always
    env_file: [.env]
    working_dir: /app
    volumes:
      - .:/app  # <-- Папка downloads будет создаваться здесь, внутри контейнера
    depends_on:
      postgres:
        condition: service_healthy
    command: >
      bash -c "alembic upgrade head && python bot.py & uvicorn server:app --host 0.0.0.0 --port 8000 --reload"

  nginx:
    image: nginx:1.25
    container_name: saverbot_nginx
    restart: always
    ports:
      - "8008:80"
      - "8443:443"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - app
      
  telegram-bot-api:
    image: aiogram/telegram-bot-api:latest
    container_name: saverbot_tgapi
    restart: always
    environment:
      TELEGRAM_API_ID: "${TELETHON_API_ID}"
      TELEGRAM_API_HASH: "${TELETHON_API_HASH}"
    ports:
      - "8081:8081"
    volumes:
      - telegram-bot-api-data:/var/lib/telegram-bot-api
    depends_on:
      - app

volumes:
  saverbot_pgdata:
  telegram-bot-api-data: