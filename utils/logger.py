import logging
import traceback
import colorlog
import os
from datetime import datetime
from logging.handlers import TimedRotatingFileHandler

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É logs, –µ—Å–ª–∏ –µ–µ –Ω–µ—Ç
os.makedirs("logs", exist_ok=True)

# === –¶–≤–µ—Ç–Ω–æ–π –ª–æ–≥–≥–µ—Ä –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏ ===
console_handler = colorlog.StreamHandler()
console_formatter = colorlog.ColoredFormatter(
    "%(log_color)s%(asctime)s | %(levelname)s | %(name)s | %(message)s",
    datefmt="%Y-%m-%d %H:%M:%S",
    log_colors={
        "DEBUG": "cyan",
        "INFO": "green",
        "WARNING": "yellow",
        "ERROR": "red",
        "CRITICAL": "red,bg_white",
    },
)
console_handler.setFormatter(console_formatter)

# === –†–æ—Ç–∞—Ü–∏—è —Ñ–∞–π–ª–∞ —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏ ===
file_handler = TimedRotatingFileHandler(
    filename="logs/bot.log",
    when="midnight",
    interval=1,
    backupCount=30,           # –°–∫–æ–ª—å–∫–æ –ª–æ–≥–æ–≤ —Ö—Ä–∞–Ω–∏—Ç—å
    encoding="utf-8",
    utc=False
)

# –§–æ—Ä–º–∞—Ç –ª–æ–≥–æ–≤ –¥–ª—è —Ñ–∞–π–ª–æ–≤
file_formatter = logging.Formatter(
    "%(asctime)s | %(levelname)s | %(name)s | %(message)s",
    datefmt="%Y-%m-%d %H:%M:%S"
)
file_handler.setFormatter(file_formatter)

# === –ö–∞—Å—Ç–æ–º–Ω—ã–π –ø–æ—Å—Ç—Ñ–∏–∫—Å –¥–ª—è —Ñ–∞–π–ª–æ–≤ ===
# –ü—Ä–∏–º–µ—Ä: bot_2025-08-02.log
file_handler.namer = lambda name: name.replace("bot.log", f"bot_{datetime.now().date()}.log")

# === –û–±—â–∏–π –ª–æ–≥–≥–µ—Ä ===
logger = colorlog.getLogger("SaveBotLogger")
logger.addHandler(console_handler)
logger.addHandler(file_handler)
logger.setLevel(logging.INFO)
logger.propagate = False


def log_message(message: str, level: int = 0, emoji: str = "", log_level: str = "info"):
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –æ—Ç—Å—Ç—É–ø–æ–≤ –∏ —ç–º–æ–¥–∑–∏.
    level ‚Äî —É—Ä–æ–≤–µ–Ω—å –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç–∏ –¥–ª—è –æ—Ç—Å—Ç—É–ø–∞, emoji ‚Äî –¥–æ–±–∞–≤–ª—è–µ—Ç –≤–∏–∑—É–∞–ª—å–Ω—ã–π –∞–∫—Ü–µ–Ω—Ç.
    """
    indent = " " * (level * 3)
    prefix = f"{emoji} " if emoji else ""
    full_message = f"{indent}{prefix}{message}"

    if log_level == "info":
        logger.info(full_message)
    elif log_level == "warning":
        logger.warning(full_message)
    elif log_level == "error":
        logger.error(full_message)
    else:
        logger.debug(full_message)


def log_receive(user_username: str, user_id: int):
    """–õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ URL –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    log_message("[RECEIVE] –ü–æ–ª—É—á–µ–Ω URL", emoji="üåê")
    log_message(f"–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: @{user_username} (id={user_id})", level=1)


def log_download_start(url: str):
    """–õ–æ–≥–∏—Ä—É–µ–º —Å—Ç–∞—Ä—Ç —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ"""
    log_message("[DOWNLOAD] –°—Ç–∞—Ä—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Å YouTube", emoji="‚è¨")
    log_message(f"URL: {url}", level=1)


def log_download_complete(file_path: str):
    """–õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è"""
    log_message("[DOWNLOAD] –í–∏–¥–µ–æ —Å–∫–∞—á–∞–Ω–æ", emoji="‚úÖ")
    log_message(f"–§–∞–π–ª: {file_path}", level=1)


def log_send_start(chat_id: int):
    """–õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ –≤ Telegram"""
    log_message("[SEND] –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram", emoji="‚úâÔ∏è")
    log_message(f"–ß–∞—Ç: {chat_id}", level=1)


def log_send_complete():
    """–õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É –≤–∏–¥–µ–æ"""
    log_message("[SEND] –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞", emoji="‚úÖ")


def log_user_sent(user_username: str, user_id: int):
    """–õ–æ–≥–∏—Ä—É–µ–º —Ñ–∞–∫—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤–∏–¥–µ–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    log_message("[USER] –í–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", emoji="üë§")
    log_message(f"@{user_username} (id={user_id})", level=1)


def log_cleanup_video(file_path: str):
    """–õ–æ–≥–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –≤–∏–¥–µ–æ—Ñ–∞–π–ª–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏"""
    log_message("[CLEANUP] –í–∏–¥–µ–æ —É–¥–∞–ª–µ–Ω–æ", emoji="üóë")
    log_message(f"–§–∞–π–ª: {file_path}", level=1)


def log_error(error: Exception, username: str, context: str = ""):
    """
    –õ–æ–≥–∏—Ä—É–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ —Å –ø–æ–ª–Ω—ã–º —Ç—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–æ–π (traceback).
    –ü–æ–∑–≤–æ–ª—è–µ—Ç —É–∫–∞–∑–∞—Ç—å –∫–æ–Ω—Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –æ–Ω–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞.
    """
    log_message(f"[ERROR] –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ (@{username})", emoji="‚ùå", log_level="error")
    if context:
        log_message(f"–ö–æ–Ω—Ç–µ–∫—Å—Ç: {context}", level=1, log_level="error")
    tb = ''.join(traceback.format_exception(type(error), error, error.__traceback__))
    log_message(tb, level=1, log_level="error")
