import os
import asyncio

from aiogram import Bot, types
from aiogram.types import FSInputFile

from utils import logger as log
from redis_db.subscribers import is_subscriber
from server import remove_file_later

from config import DOMAIN

async def send_video(
    bot: Bot,
    message: types.Message,
    chat_id: int,
    user_id: int,
    file_path: str,
    width: int,
    height: int,
):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∏–¥–µ–æ –≤ —á–∞—Ç. –ï—Å–ª–∏ —Ñ–∞–π–ª –±–æ–ª—å—à–µ 49 –ú–ë, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ.
    –î–ª—è –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ —Å—Å—ã–ª–∫–∞ —É–¥–∞–ª—è–µ—Ç—Å—è –ø–æ–∑–∂–µ, –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö ‚Äî —á–µ—Ä–µ–∑ 5 –º–∏–Ω—É—Ç.
    –î–ª—è –º–∞–ª–µ–Ω—å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –≤–∏–¥–µ–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é —Å –ø–æ—Å–ª–µ–¥—É—é—â–∏–º —É–¥–∞–ª–µ–Ω–∏–µ–º —Ñ–∞–π–ª–∞.
    """
 
    if os.path.getsize(file_path) > 49 * 1024 * 1024:
        file_name = os.path.basename(file_path)
        link = f"{DOMAIN}/video/{file_name}"
    

        keyboard = types.InlineKeyboardMarkup(
            inline_keyboard=[
                [types.InlineKeyboardButton(text="‚öôÔ∏è –°–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ", url=link)]
            ]
        )

        await bot.send_message(
            chat_id,
            text=(
                "üì• –ß—Ç–æ–±—ã —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ —Ä–∞–∑–º–µ—Ä–æ–º –±–æ–ª–µ–µ 50–ú–ë, –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.\n\n"
                "‚è≥ –í–∏–¥–µ–æ —É–¥–∞–ª–∏—Ç—Å—è —Å–ø—É—Å—Ç—è 5 –º–∏–Ω—É—Ç —É –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —É –ø—Ä–µ–º–∏—É–º ‚Äî –≤ —Ä–∞–∑—ã –ø–æ–∑–∂–µ."
            ),
            reply_markup=keyboard
        )

        if await is_subscriber(user_id):
            asyncio.create_task(remove_file_later(file_path, delay=900, message=message))
        else:
            asyncio.create_task(remove_file_later(file_path, delay=300, message=message))

    else:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–∏–¥–µ–æ –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ Telegram
        await bot.send_video(
            chat_id=chat_id,
            video=FSInputFile(file_path),
            caption="üíæ –°–∫–∞—á–∏–≤–∞–π –≤–∏–¥–µ–æ —Å YouTube | Instagram | Tiktok \n\n@savetokgrambot",
            width=width,
            height=height,
            supports_streaming=True,
        )

        # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª —Å–ø—É—Å—Ç—è 10 —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
        asyncio.create_task(remove_file_later(file_path, delay=10, message=message))

    log.log_send_complete()


async def send_audio(bot: Bot, message:types.Message, chat_id: int, file_path: str):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞—É–¥–∏–æ –≤ —á–∞—Ç —Å –ø–æ–¥–ø–∏—Å—å—é.
    –§–∞–π–ª —É–¥–∞–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏.
    """
    log.log_send_start(chat_id)

    await bot.send_audio(
        chat_id=chat_id,
        audio=FSInputFile(file_path),
        caption="üíæ –ê—É–¥–∏–æ –∏–∑ YouTube | @savetokgrambot",
    )

    # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª —Å–ø—É—Å—Ç—è 10 —Å–µ–∫—É–Ω–¥ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    asyncio.create_task(remove_file_later(file_path, delay=10, message=message))

    log.log_send_complete()
